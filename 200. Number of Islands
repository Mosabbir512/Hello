class Solution {
public:
    int vis[305][305];
    vector<pair<int, int>> mov = {{0,1}, {0,-1}, {1,0}, {-1,0}};
    bool check(int i,int j,int n,int m){
        return i>=0 && j>=0 && i<n && j<m;
    }
    void dfs(vector<vector<char>>&grid,int i,int j){
        vis[i][j]=1;
        for(auto  it: mov){
            int x=it.first+i;
            int y=it.second+j;
          //  cout<<"ind=="<<x<<" "<<y<<" ";
            if(check(x,y,grid.size(),grid[0].size())){
               // cout<<"ind=="<<x<<" "<<y<<endl;
                if(grid[x][y]=='1' && vis[x][y]==0)dfs(grid,x,y);
            }
        }

    }
    int numIslands(vector<vector<char>>& grid) {
        int ans=0;
        for(int i=0;i<grid.size();++i){
            for(int j=0;j<grid[i].size();++j){
                if(grid[i][j]=='1' && vis[i][j]==0){
                cout<<i<<" "<<j<<endl;
                dfs(grid,i,j);
                ++ans;
                }
            }
        }
        return ans;
    }
};
