/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>v;
    void dfs(TreeNode * root,int ind){
        if(!root)return;
        vector<int>tm;
        if(ind==v.size())v.push_back(tm);
        v[ind].push_back(root->val);
        dfs(root->left,ind+1);
        dfs(root->right,ind+1);

    }
    vector<int> rightSideView(TreeNode* root) {
        dfs(root,0);
        vector<int>ans;
        for(int i=0;i<v.size();i++){
            int n=v[i].size();
            ans.push_back(v[i][n-1]);
        }
        return ans;
    }
};
