/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void levelOrderBottom(TreeNode* root,vector<vector<int>>&v,int ind){
        vector<int>tm;
        if(root==nullptr)return;
        int n=v.size();
        if(ind<n){
            v[ind].push_back(root->val);
        }else {
            tm.push_back(root->val);
            v.push_back(tm);
        }
        levelOrderBottom(root->left,v,ind+1);
        levelOrderBottom(root->right,v,ind+1);
       
    }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>v;
        levelOrderBottom(root,v,0);
        reverse(v.begin(),v.end());
        return v;
    }
};
